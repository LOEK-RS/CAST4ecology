---
title: "CAST4Ecology Figures"
format:
  html:
    code-fold: true
execute: 
  warning: false
  message: false
---

```{r libraries}
library(sf)
library(tmap)
library(terra)
library(viridis)
library(CAST)
library(tidyverse)
library(scales)
```





# Data overview


```{r data}
plots = st_read("data/plots.gpkg", quiet = TRUE)
predictors = rast("data/predictors.tif")
modeldomain = st_read("data/modeldomain.gpkg", quiet = TRUE)
predictor_names = names(predictors)
response_name = "Species_richness"

# models
rcv_model = readRDS("modelling/randomcv_model.RDS")
scv_model = readRDS("modelling/spatialcv_model.RDS")
ffs_model = readRDS("modelling/ffs_model.RDS")


# cv strategies
knndm_setup = readRDS("modelling/knn_setup.RDS")

plots$knn_fold = knndm_setup$clusters
plots$random_fold = sample(seq(5), size = nrow(plots), replace = TRUE) ## imitating a random 5 fold cross validation


# Random CV Results
rcv_prediction = readRDS("modelling/randomcv_prediction.RDS")
rcv_DI = readRDS("modelling/randomcv_DI.RDS")
rcv_AOA = readRDS("modelling/randomcv_AOA.RDS")
rcv_aoaplot = readRDS("modelling/randomcv_aoaplot.RDS")

# Knndm CV Results

scv_DI = readRDS("modelling/spatialcv_DI.RDS")
scv_AOA = readRDS("modelling/spatialcv_AOA.RDS")
scv_aoaplot = readRDS("modelling/spatialcv_aoaplot.RDS")
scv_stats = readRDS("modelling/spatialcv_aoastats.RDS")


# Feature Selection Results
ffs_prediction = readRDS("modelling/ffs_prediction.RDS")
ffs_DI = readRDS("modelling/ffs_DI.RDS")
ffs_AOA = readRDS("modelling/ffs_AOA.RDS")
ffs_aoaplot = readRDS("modelling/ffs_aoaplot.RDS")
ffs_stats = readRDS("modelling/ffs_aoastats.RDS")

# Feature Selection Expected Error
ffs_expected = readRDS("modelling/ffs_expected.RDS")
ffs_RMSE = readRDS("modelling/ffs_expectedRMSE.RDS")
ffs_updatedAOA = readRDS("modelling/ffs_updatedAOA.RDS")
ffs_calib = readRDS("modelling/ffs_calibdata.RDS")





# color palette
Okabe_Ito <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#CC79A7") # c("#0072B2", "#D55E00", "#000000")



```



## Response Samples

```{r response}
tm_shape(modeldomain)+
    tm_borders()+
    tm_shape(plots)+
    tm_symbols(col = "Species_richness", style = "cont",
               legend.col.reverse = TRUE,
               palette = plasma(50, direction = -1),
               size = 0.2, title.col = "Species richness")+
    tm_layout(frame = FALSE)
```



## Example Predictors

```{r predictors}
p = predictors[[c("bio_4", "bio_12", "bio_8", "elev")]]
names(p) = c("Temp. Seasonality", "Annual Precipitation", "Temp. wettest quarter", "Elevation")

tm_shape(p)+
    tm_raster(style = "cont", title = "", legend.reverse = TRUE)+
    tm_facets(free.scales = TRUE)+
    tm_layout(legend.position = c("right", "bottom"),
              legend.just = "left",
              panel.show = TRUE,
              panel.labels = names(p),
              panel.label.bg.color = NA,
              frame.lwd = NA,
              frame = FALSE)
```


## Geodistance without Cross-Validation


```{r geodistance}

gd_rcv = plot_geodist(plots,
                  modeldomain,
                  showPlot = FALSE)
gd_rcv$plot + 
    scale_y_continuous(expand = c(0,0))+
    scale_x_continuous(expand = c(0,0),
                       trans = "log10",
                       labels = trans_format("log10", math_format(10^.x)))+
    theme_light()+
    theme(legend.position = "bottom")
```




## Random Cross-Validation

```{r randomcv}
#| layout-ncol: 2
#| layout-nrow: 2


tm_shape(modeldomain)+
    tm_borders()+
    tm_shape(plots)+
    tm_symbols(col = "random_fold", style = "cat",
               legend.col.reverse = FALSE,
               palette = Okabe_Ito,
               size = 0.2, title.col = "Random Folds",
               legend.col.is.portrait = FALSE)+
    tm_layout(frame = FALSE)



gd_rcv = plot_geodist(plots,
                  modeldomain,
                  cvfolds = plots$random_fold,
                  showPlot = FALSE)
gd_rcv$plot + 
    scale_y_continuous(expand = c(0,0))+
    scale_x_continuous(expand = c(0,0),
                       trans = "log10",
                       labels = trans_format("log10", math_format(10^.x)))+
    theme_light()+
    theme(legend.position = "bottom")
```






## knn Cross-Validation


```{r knncv}
#| layout-ncol: 2
#| layout-nrow: 2

tm_shape(modeldomain)+
    tm_borders()+
    tm_shape(plots)+
    tm_symbols(col = "knn_fold", style = "cat",
               legend.col.reverse = FALSE,
               palette = Okabe_Ito,
               size = 0.2, title.col = "knndm Folds",
               legend.col.is.portrait = FALSE)+
    tm_layout(frame = FALSE)



gd = plot_geodist(plots,
                  modeldomain,
                  cvfolds = plots$knn_fold,
                  showPlot = FALSE)
gd$plot + 
    scale_y_continuous(expand = c(0,0))+
    scale_x_continuous(expand = c(0,0),
                       trans = "log10",
                       labels = trans_format("log10", math_format(10^.x)))+
    theme_light()+
    theme(legend.position = "bottom")

```











## Models 

```{r modelcomparison}
cv_results = rbind(global_validation(rcv_model),
    global_validation(scv_model),
    global_validation(ffs_model)) |> 
    as.data.frame() |> mutate("CV" = c("random", "knndm", "knndm"),
                              "predictors" = c("21", "21", "4 (ffs)"))
    
knitr::kable(cv_results)
```






## Maps: Random CV


```{r rcvPrediction}

tm_shape(rcv_prediction)+
    tm_raster(title = "Predicted \nSpecies Richness", style = "cont",
              palette = mako(50, begin = 0.2),
              legend.reverse = TRUE)+
        tm_layout(legend.position = c("right", "bottom"),
              legend.just = "left",
              frame = FALSE)

```




```{r rcvDI}
#| fig-cap: "DI and AOA threshold"
#| layout-ncol: 2

rcv_aoaplot + 
    scale_x_continuous(expand = c(0,0))+
    theme(panel.grid.minor = element_blank())



tm_shape(rcv_DI)+
    tm_raster(palette = viridis(50), style = "cont", legend.reverse = TRUE, breaks = c(0,0.1,0.223,0.5,1))+
            tm_layout(legend.position = c("right", "bottom"),
              legend.just = "left",
              frame = FALSE)
```


```{r rcvAOA}
#| fig-cap: "Prediction of species richness with AOA of a random cross validation"
tm_shape(rcv_prediction)+
    tm_raster(title = "Predicted \nSpecies Richness", style = "cont",
              palette = mako(50, begin = 0.2),
              legend.reverse = TRUE)+
    tm_shape(rcv_AOA)+
    tm_raster(palette = c("1" = NA, "0" = "darkgoldenrod1"), style = "cat", legend.show = FALSE)+
    tm_add_legend(type = "fill", col = "darkgoldenrod1", border.lwd = 0,labels = "Outside AOA")+
        tm_layout(legend.position = c("right", "bottom"),
              legend.just = "left",
              frame = FALSE)
```


## Maps: knn CV


```{r knnDI}
#| fig-cap: "DI and AOA threshold"
#| layout-ncol: 2
scv_aoaplot + 
    scale_x_continuous(expand = c(0,0))+
    theme(panel.grid.minor = element_blank())



tm_shape(scv_DI)+
    tm_raster(palette = viridis(50), style = "cont", legend.reverse = TRUE, breaks = c(0,0.1,0.368,0.5,1))+
            tm_layout(legend.position = c("right", "bottom"),
              legend.just = "left",
              frame = FALSE)
```


```{r knnAOA}
#| fig-cap: "Prediction of species richness with AOA of a knndm cross validation"
tm_shape(rcv_prediction)+
    tm_raster(title = "Predicted \nSpecies Richness", style = "cont",
              palette = mako(50, begin = 0.2),
              legend.reverse = TRUE)+
    tm_shape(scv_AOA)+
    tm_raster(palette = c("1" = NA, "0" = "darkgoldenrod1"), style = "cat", legend.show = FALSE)+
    tm_add_legend(type = "fill", col = "darkgoldenrod1", border.lwd = 0,labels = "Outside AOA")+
        tm_layout(legend.position = c("right", "bottom"),
              legend.just = "left",
              frame = FALSE)
```


## Maps: feature selection knn


```{r ffsDI}
#| fig-cap: "DI and AOA threshold"
#| layout-ncol: 2
ffs_aoaplot + 
    scale_x_continuous(expand = c(0,0))+
    theme(panel.grid.minor = element_blank())


tm_shape(ffs_DI)+
    tm_raster(palette = viridis(50), style = "cont", legend.reverse = TRUE, breaks = c(0,0.1,0.328,0.5,1))+
            tm_layout(legend.position = c("right", "bottom"),
              legend.just = "left",
              frame = FALSE)
```


```{r ffsAOA}
#| fig-cap: "Prediction of species richness with AOA of a knndm cross validation after feature selection"
tm_shape(ffs_prediction)+
    tm_raster(title = "Predicted \nSpecies Richness", style = "cont",
              palette = mako(50, begin = 0.2),
              legend.reverse = TRUE)+
    tm_shape(ffs_AOA)+
    tm_raster(palette = c("1" = NA, "0" = "darkgoldenrod1"), style = "cat", legend.show = FALSE)+
    tm_add_legend(type = "fill", col = "darkgoldenrod1", border.lwd = 0,labels = "Outside AOA")+
        tm_layout(legend.position = c("right", "bottom"),
              legend.just = "left",
              frame = FALSE)
```


```{r ffsExpected}
#| layout-ncol: 2
ffs_expected$plot

tm_shape(ffs_RMSE)+
    tm_raster(title = "Expected \nRMSE",style = "cont", legend.reverse = TRUE, palette = mako(50, direction = -1))+
    tm_shape(ffs_updatedAOA)+
    tm_raster(palette = c("1" = NA, "0" = "darkgoldenrod1"), style = "cat", legend.show = FALSE)+
    tm_add_legend(type = "fill", col = "darkgoldenrod1", border.lwd = 0,labels = "Outside AOA")+
            tm_layout(legend.position = c("right", "bottom"),
              legend.just = "left",
              frame = FALSE)


```





